# ============================================================
# XController Secure Telegram Moderation Bot - Environment File
# Copy this file to `.env` and fill in the required values.
# ============================================================

# ---------------------------
# Required Telegram Credentials
# Obtain API_ID and API_HASH from https://my.telegram.org/apps
# ---------------------------
API_ID=123456
API_HASH=your_api_hash_here
BOT_TOKEN=1234567890:AA...your_bot_token_here

# ---------------------------
# Single Allowed Group
# The ONLY group (supergroup/channel) the bot will moderate.
# Use the numeric ID (e.g. -1001234567890123)
# Required: YES
# ---------------------------
ALLOWED_GROUP_ID=-1001234567890123

# ---------------------------
# Admin User IDs
# Comma-separated numeric Telegram user IDs.
# These users can: activate, /orwell, /status
# If empty -> bot cannot be controlled (NOT recommended).
# ---------------------------
ADMIN_USER_IDS=11111111,22222222

# ---------------------------
# Encrypted Database Passphrase (SQLCipher)
# STRONG secret required: if lost -> data unrecoverable.
# Recommended: >= 32 random chars.
# Required: YES
# ---------------------------
DB_PASSPHRASE=change_this_to_a_strong_random_passphrase

# ---------------------------
# (Optional) Fixed SALT
# If set: disables daily rotation (stable violation tracking).
# If UNSET: bot generates & ROTATES salt every 24h (privacy-focused),
# clearing violations & dm_spam tables at rotation.
# Provide ONLY hexadecimal (recommend 64 hex chars = 32 bytes).
# Example generate: python -c "import secrets;print(secrets.token_hex(32))"
# ---------------------------
# SALT=9f3c0e0a9b1e4d5f6c7a8123b4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3

# ---------------------------
# Initial Banned Words (optional)
# Comma-separated. Lowercased/stored once.
# Example: BANNED_WORDS=spam,scam,fraud
# ---------------------------
BANNED_WORDS=

# ---------------------------
# DM Spam Controls
# Non-admin DMs exceeding threshold (in window) â†’ ban + block silently.
# DM_SPAM_THRESHOLD: clamped internally to 5..1000 if out of range.
# DM_SPAM_WINDOW_DAYS: clamped to 1..30 if out of range.
# ---------------------------
DM_SPAM_THRESHOLD=50
DM_SPAM_WINDOW_DAYS=7

# ---------------------------
# Logging Level (optional)
# Common: INFO, WARNING, ERROR, DEBUG
# (Current code defaults to INFO if unset.)
# ---------------------------
# LOG_LEVEL=INFO

# ---------------------------
# Notes:
# 1. If you enable SALT (fixed mode), you maintain continuity of violation tracking.
# 2. If you omit SALT, rotating privacy boundary resets user correlation daily.
# 3. Keep DB_PASSPHRASE secret; leaking it compromises stored moderation history.
# 4. ALLOWED_GROUP_ID must match the exact target group; bot ignores all others.
# 5. ADMIN_USER_IDS must be numeric Telegram user IDs (NOT usernames).
# 6. After first start: Admin must DM 'activate' to enable moderation.
# ---------------------------
